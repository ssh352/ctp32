package sims2016derive.quotationtranscode.context.struct;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */

public class CThostFtdcCurrentTimeField extends StructObject {
	public CThostFtdcCurrentTimeField() {
		super();
	}

	/**
	 * \u5f53\u524d\u65e5\u671f
	 */
	@Array({9}) 
	@Field(0) 
	private Pointer<Byte> CurrDate() {
		return this.io.getPointerField(this, 0);
	}

	@Array({9})
	@Field(0)
	public void setCurrDate(String currDate) {
		this.io.getPointerField(this, 0).setCString(currDate);
	}

	public String getCurrDate() {
		return CurrDate().getCString();
	}

	/**
	 * \u5f53\u524d\u65f6\u95f4
	 */
	@Array({9}) 
	@Field(1) 
	private Pointer<Byte> CurrTime() {
		return this.io.getPointerField(this, 1);
	}

	@Array({9})
	@Field(1)
	public void setCurrTime(String currTime) {
		this.io.getPointerField(this, 1).setCString(currTime);
	}

	public String getCurrTime() {
		return CurrTime().getCString();
	}

	/**
	 * \u5f53\u524d\u65f6\u95f4\uff08\u6beb\u79d2\uff09
	 */
	@Field(2) 
	private int CurrMillisec() {
		return this.io.getIntField(this, 2);
	}

	public int getCurrMillisec() {
		return CurrMillisec();
	}

	/**
	 * \u5f53\u524d\u65f6\u95f4\uff08\u6beb\u79d2\uff09
	 */
	@Field(2) 
	private CThostFtdcCurrentTimeField CurrMillisec(int CurrMillisec) {
		this.io.setIntField(this, 2, CurrMillisec);
		return this;
	}

	public void setCurrMillisec(int currMillisec) {
		CurrMillisec(currMillisec);
	}

	public CThostFtdcCurrentTimeField(Pointer pointer) {
		super(pointer);
	}

}

