package sims2016derive.quotationtranscode.context.struct;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */

public class CThostFtdcLogoutAllField extends StructObject {
	public CThostFtdcLogoutAllField() {
		super();
	}

	/**
	 * \u524d\u7f6e\u7f16\u53f7
	 */
	@Field(0) 
	private int FrontID() {
		return this.io.getIntField(this, 0);
	}

	public int getFrontID() {
		return FrontID();
	}

	/**
	 * \u524d\u7f6e\u7f16\u53f7
	 */
	@Field(0) 
	private CThostFtdcLogoutAllField FrontID(int FrontID) {
		this.io.setIntField(this, 0, FrontID);
		return this;
	}

	public void setFrontID(int frontID) {
		FrontID(frontID);
	}

	/**
	 * \u4f1a\u8bdd\u7f16\u53f7
	 */
	@Field(1) 
	private int SessionID() {
		return this.io.getIntField(this, 1);
	}

	public int getSessionID() {
		return SessionID();
	}

	/**
	 * \u4f1a\u8bdd\u7f16\u53f7
	 */
	@Field(1) 
	private CThostFtdcLogoutAllField SessionID(int SessionID) {
		this.io.setIntField(this, 1, SessionID);
		return this;
	}

	public void setSessionID(int sessionID) {
		SessionID(sessionID);
	}

	/**
	 * \u7cfb\u7edf\u540d\u79f0
	 */
	@Array({41}) 
	@Field(2) 
	private Pointer<Byte> SystemName() {
		return this.io.getPointerField(this, 2);
	}

	@Array({41})
	@Field(2)
	public void setSystemName(String systemName) {
		this.io.getPointerField(this, 2).setCString(systemName);
	}

	public String getSystemName() {
		return SystemName().getCString();
	}

	public CThostFtdcLogoutAllField(Pointer pointer) {
		super(pointer);
	}

}

