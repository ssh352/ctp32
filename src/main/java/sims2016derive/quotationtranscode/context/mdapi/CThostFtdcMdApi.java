package sims2016derive.quotationtranscode.context.mdapi;

import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Name;
import org.bridj.ann.Ptr;
import org.bridj.ann.Virtual;
import org.bridj.cpp.CPPObject;

import sims2016derive.quotationtranscode.context.struct.CThostFtdcReqUserLoginField;
import sims2016derive.quotationtranscode.context.struct.CThostFtdcUserLogoutField;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("thostmduserapi")
public class CThostFtdcMdApi extends CPPObject {
    public CThostFtdcMdApi() {
        super();
    }

    public native static Pointer<CThostFtdcMdApi> CreateFtdcMdApi(Pointer<Byte> pszFlowPath, boolean bIsUsingUdp);

    @Virtual(0)
    public native void Release();

    @Virtual(1)
    public native void Init();

    @Virtual(2)
    public native int Join();

    @SuppressWarnings("deprecation")
    @Virtual(3)
    public Pointer<Byte> GetTradingDay() {
        return Pointer.pointerToAddress(GetTradingDay$2(), Byte.class);
    }

    @Ptr
    @Name("GetTradingDay")
    @Virtual(3)
    protected native long GetTradingDay$2();

    @Virtual(4)
    public void RegisterFront(Pointer<Byte> pszFrontAddress) {
        RegisterFront(Pointer.getPeer(pszFrontAddress));
    }

    @Virtual(4)
    protected native void RegisterFront(@Ptr long pszFrontAddress);

    @Virtual(5)
    public void RegisterNameServer(Pointer<Byte> pszNsAddress) {
        RegisterNameServer(Pointer.getPeer(pszNsAddress));
    }

    @Virtual(5)
    protected native void RegisterNameServer(@Ptr long pszNsAddress);

    @Virtual(6)
    public void RegisterSpi(Pointer<CThostFtdcMdSpi> pSpi) {
        RegisterSpi(Pointer.getPeer(pSpi));
    }

    @Virtual(6)
    protected native void RegisterSpi(@Ptr long pSpi);

    @Virtual(7)
    public int SubscribeMarketData(Pointer<Pointer<Byte>> ppInstrumentID, int nCount) {
        return SubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
    }

    @Virtual(7)
    protected native int SubscribeMarketData(@Ptr long ppInstrumentID, int nCount);

    @Virtual(8)
    public int UnSubscribeMarketData(Pointer<Pointer<Byte>> ppInstrumentID, int nCount) {
        return UnSubscribeMarketData(Pointer.getPeer(ppInstrumentID), nCount);
    }

    @Virtual(8)
    protected native int UnSubscribeMarketData(@Ptr long ppInstrumentID, int nCount);

    @Virtual(9)
    public int ReqUserLogin(Pointer<CThostFtdcReqUserLoginField> pReqUserLoginField, int nRequestID) {
        return ReqUserLogin(Pointer.getPeer(pReqUserLoginField), nRequestID);
    }

    @Virtual(9)
    protected native int ReqUserLogin(@Ptr long pReqUserLoginField, int nRequestID);

    @Virtual(10)
    public int ReqUserLogout(Pointer<CThostFtdcUserLogoutField> pUserLogout, int nRequestID) {
        return ReqUserLogout(Pointer.getPeer(pUserLogout), nRequestID);
    }

    @Virtual(10)
    protected native int ReqUserLogout(@Ptr long pUserLogout, int nRequestID);

    @SuppressWarnings({ "rawtypes", "unchecked" })
    protected CThostFtdcMdApi(Pointer pointer) {
        super(pointer);
    }
}
